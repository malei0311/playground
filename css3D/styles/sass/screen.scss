@import "compass/reset";
@import "compass/css3";
@import "animation";

body {
  padding: 50px 0;
}

.clearfix {
  *zoom: 1;

  &::before,
  &::after {
    display: table;
    line-height: 0;
    content: "";
  }

  &::after {
    clear: both;
  }
}

.hide {
  display: none;
}

.playground {
  width: 90%;
  margin: 0 auto;
  // border: 1px dashed rgba(0,0,0,.3);
  padding: 10px 10px 0;
}

.playground-cell {
  margin-bottom: 10px;
  background-color: rgba(0,0,0,.03);
  @extend .clearfix;
}

@mixin cross-line($width: 1px, $color: rgba(0,0,0,.3)) {
  &::before,
  &::after {
    position: absolute;
    content: "";
    z-index: 1;
  }

  &::before {
    height: 100%;
    width: 0;
    border-left: #{$width} dashed #{$color};
    left: calc(50% - #{$width} / 2);
  }

  &::after {
    height: 0;
    width: 100%;
    border-top: #{$width} dashed #{$color};
    top: calc(50% - #{$width} / 2);
  }
}

.playground-demo-shadow {
  $color: rgba(0,0,0,.3);
  border: 1px dashed #{$color};
  float: left;
  position: relative;

  @include cross-line(1px, $color);
}

[class^="demo"] {
  // border: 1px solid #000;
}

.demo-hexagon {
  position: relative;
  height: 8em;
  width: 8em;
  overflow: hidden;
  @include transform(skewX(30deg) scaleY(cos(30deg)));

  &::before {
    position: absolute;
    content: "";
    width: 100%;
    background-color: #E67E22;
    height: 100%;
    @include transform(scaleY(1/cos(30deg)) skewX(-30deg) rotate(30deg) scaleX(cos(30deg)));  
  }
}

.demo-triangle {
  position: relative;
  height: 8em;
  width: 8em;
  overflow: hidden;
  @include transform(translateY(tan(30deg)/2*100%) rotate(60deg) skewX(30deg) scaleY(cos(30deg)));

  &::before {
    position: absolute;
    content: "";
    width: 100%;
    background-color: #E67E22;
    height: 100%;
    @include transform(scaleY(1/cos(30deg)) skewX(-30deg) rotate(30deg) translateX(-50%));  
  }
}

// 540deg 108deg 90 + 18
.demo-pentagon {
  position: relative;
  height: 8em;
  width: 8em;
  overflow: hidden;
  $translateY_zero: sin(18deg)/(tan(36deg)*(2*sin(18deg)+1))*100%;
  @include transform(translateY(#{$translateY_zero}) rotate(-36deg) skewX(18deg) scaleY(cos(18deg)));

  .demo-pentagon-inner {
    $translateY_one: sin(36deg)/(2*sin(18deg)+1)*100%;
    $translateY_two: 50% - $translateY_one;
    position: relative;
    height: 100%;
    width: 100%;
    // background: red;
    overflow: hidden;
    @include transform(scaleY(1/cos(18deg)) skewX(-18deg) rotate(36deg) translateY(-#{$translateY_one}) rotate(18deg) skewY(54deg) scaleX(cos(54deg)));
  
    &::before {
      position: absolute;
      content: "";
      width: 100%;
      height: 100%;
      background-color: green;
      @include transform(scaleX(1/cos(54deg)) skewY(-54deg) rotate(-18deg) translateY(-#{$translateY_two}));
    }
  }
}

@include keyframes(ss) {
  0% {
    @include transform(rotateY(0deg) rotateX(0deg));
  }
  100% {
    @include transform(rotateY(720deg) rotateX(360deg));
  }
}

.demo-prism-container {
  height: 8em;
  width: 8em;
  position: relative;
  @include perspective(1000px);
  @include perspective-origin(50% 50%);
  // @include transform-style(perserve-3d);
  

  .demo-prism {
    width: 100%;
    height: 100%;
    position: absolute;
    @include transform-style(preserve-3d);
    @include animation(ss 2s ease-in-out 0s infinite alternate);
    // @include transition(all 1s);

    .triangle {
      position: absolute;
      height: 100%;
      width: 100%;
      overflow: hidden;
      @include transform(translateY(tan(30deg)/2*100%) rotate(60deg) skewX(30deg) scaleY(cos(30deg)));

      &::before {
        position: absolute;
        content: "";
        width: 100%;
        background-color: #E67E22;
        height: 100%;
        @include transform(scaleY(1/cos(30deg)) skewX(-30deg) rotate(30deg) translateX(-50%));  
      }
    }

    .triangle-base {
      width: 100%;
      height: 100%;
      position: absolute;
      @include backface-visibility(hidden);
      &.up {
        @include transform(rotateX(-90deg)  translateZ(-4em) rotateY(180deg));
      }

      &.bottom {
        @include transform(rotateX(-90deg) translateZ(4em));
      }
    }


    .rect {
      height: 100%;
      width: 100%;
      position: absolute;
      backface-visibility: hidden;
      @include backface-visibility(hidden);
    }

    .rect1 {
      @include transform(rotateY(60deg) translateZ(2.3094008em));
      background-color: fade-out(red,.2);
    }

    .rect2 {
      @include transform(rotateY(180deg) translateZ(2.3094008em));
      background-color: fade-out(green,.2);
    }
    .rect3 {
      @include transform(rotateY(300deg) translateZ(2.3094008em));
      background-color: fade-out(yellow,.2);
    }
  }
}

.playground-cell-carousel {
  position: relative;
  padding: 150px 0;
}

@include keyframes(carousel) {
  100% {
    @include transform(rotateX(360deg) rotateY(360deg))
  }
}

@include keyframes(figureTarget) {
  100% {
    @include transform(rotateX(45deg) rotateY(145deg));
  }
}

$n: 20;
$radius: 5em;
$radian: 2 * pi() / $n;
$borderWidth:  2 * $radius * tan($radian / 2);
$base: #00fffc;
$is_vertical: false;

@for $i from 0 to $n {
  @include keyframes(figureTarget#{$i}) {
    100% {
      @include transform(rotateY(#{$i * $radian}rad) translateZ($radius) rotateX(#{$i * $radian / 2}rad))
    }
  }
}

.demo-carousel-container {
  position: relative;
  width: 0;
  left: 50%;
  top: 50%;
  @include perspective(1000px);
  @include perspective-origin(50% 50%);

  .demo-carousel {
    position: absolute;
    @include transform-style(preserve-3d);
    // @include transform(rotateX(45deg));
    @include animation(carousel 10s 0s ease infinite alternate);    

    // @include transform(translateZ(-$radius));

    figure {
      display: block;
      position: absolute;
      font-size: 20px;
      font-weight: bold;
      text-align: center;
      color: #fff;
      @if $is_vertical {
        height: $borderWidth;
        line-height: $borderWidth;
      } @else {
        line-height: 40px;
        width: $borderWidth;
      }
    }
  }

  .demo-carousel-1 {
    $salt: 1;
    // @include animation(carousel 10s 0s ease infinite alternate);
    figure {
      @for $i from 0 to $n {

        &:nth-child(#{$i + 1}) {
          background: rgba(adjust-hue($base, $i * 360deg / $n), 0.5);
          @if $is_vertical {
            @include transform(rotateX(#{$i * $radian}rad) translateZ($radius));
          } @else {
            @include transform(rotateY(#{$i * $radian}rad) translateZ($radius));
            // @include animation(figureTarget #{$salt * $n}s #{$salt * $i}s ease infinite alternate);
            @include animation(figureTarget #{$salt}s #{$salt * $i}s ease infinite alternate);
            // @include animation(figureTarget#{$i} #{$salt * $n}s #{$salt * $i}s ease infinite alternate);
          }
        }
      }
    }
  }
  .demo-carousel-2 {
    $salt: 0.1;
    // @include animation(carousel 10s 0s ease infinite alternate);
    figure {
      @for $i from 0 to $n {

        &:nth-child(#{$i + 1}) {
          background: rgba(adjust-hue($base, $i * 360deg / $n), 0.5);
          @if $is_vertical {
            @include transform(rotateX(#{$i * $radian}rad) translateZ($radius));
          } @else {
            @include transform(rotateY(#{$i * $radian}rad) translateZ($radius));
            @include animation(figureTarget #{$salt * $n}s #{$salt * $i}s ease infinite alternate);
            // @include animation(figureTarget #{$salt}s #{$salt * $i}s ease infinite alternate);
            // @include animation(figureTarget#{$i} #{$salt * $n}s #{$salt * $i}s ease infinite alternate);
          }
        }
      }
    }
  }
  .demo-carousel-3 {
    $salt: 0.1;
    // @include animation(carousel 10s 0s ease infinite alternate);
    figure {
      line-height: 100px;
      // @include transform-origin(50%,0%);
      @for $i from 0 to $n {

        &:nth-child(#{$i + 1}) {
          background: rgba(adjust-hue($base, $i * 360deg / $n), 0.5);
          @if $is_vertical {
            @include transform(rotateX(#{$i * $radian}rad) translateZ($radius));
          } @else {
            @include transform(rotateY(#{$i * $radian}rad) translateZ($radius));
            // @include animation(figureTarget #{$salt * $n}s #{$salt * $i}s ease infinite alternate);
            // @include animation(figureTarget #{$salt}s #{$salt * $i}s ease infinite alternate);
            @include animation(figureTarget#{$i} #{$salt * $n}s #{$salt * $i}s ease infinite alternate);
          }
        }
      }
    }
  }
}

.playground-cell-circle {
  position: relative;
  padding: 300px 0;
}

.demo-circle-container {
  position: relative;
  width: 0;
  left: 50%;
  top: 50%;
  @include perspective(1000px);
  @include perspective-origin(50% 50%);

  $circleTranslatez: 8em;
  $circleDegree: 5;
  $circleRadian: $circleDegree * pi() / 180;
  $width: 2 * $circleTranslatez * tan($circleRadian);
  
  .demo-circle {
    position: absolute;
    @include transform-style(preserve-3d);
    // @include transform(rotateY(90deg));
    @include animation(carousel 10s 0s ease infinite alternate);
    figure {

      display: block;
      position: absolute;
      width: $width;
      height: 3px;
    }
  }

  .demo-circle-1 {
    figure {
      @for $i from 0 to 720 {
        &:nth-child(#{$i + 1}) {
          background: rgba(adjust-hue($base, $i * 360deg / $n), .5);
          @include transform(rotateX(#{$i/30}deg) translateY(#{$i/4}px) rotateY(#{$i*$circleDegree}deg) translateZ(8em));
        }
      }
    }
  }

  .demo-circle-2 {
    figure {
      @for $i from 0 to 720 {
        &:nth-child(#{$i + 1}) {
          background: rgba(adjust-hue($base, $i * 360deg / $n), .5);
          @include transform(rotateX(#{$i/2}deg) rotateY(#{$i*$circleDegree}deg) translateZ(8em));
        }
      }
    }
  }
}